These images were my primary tool to debug the included DtoE.cuh kernel, although the first several were used to test boundary conditions and I/O rather than materials.  Additionally, this is by no means the entirety of renders produced: these are simply the ones that were either different or striking enough for me to save.  Typically, the first picture I would get concerning a blowup is an array of #NAN or #INF, but from there it was usually fairly simple affair to find a timestep before the blowup occurred. 

These successfully completed with the "\working\comparison*.png" images, looking which looked at output from a popular open-source (CPU-based) simulation as well (second row) although "\working\workingbloch.png" successfully demonstrated the expected behavior fairly well.  For the record, the differences were well within expected bounds at 1e-8 or less for a given pixel.

"Blowup7.png" starts the series actually using DtoE.cuh, although many of these errors were due to incorrect initial subpixel smoothing as well as errors within the kernel.  This subpixel smoothing prestep eventually required a complete overhaul, but eventually I got it working correctly- along with some live rendering in OpenGL I had been working on concurrently for a while as well.  The end result is "teworks.png", but the (less colorful) real proof that things were working as they should was achieving the predicted O(n^2) error in a couple of different simulations (see "\working\graph.png").

"\working\tachyon.png" is from an earlier attempt that used lossy (perfectly-matched-layer) boundary conditions and is included mostly because it's one of my favorite renders.